package com.maro.manager.print.controller;

import com.maro.client.common.constant.enumconstant.FoodTypeEnum;
import com.maro.client.common.util.EnumUtil;
import com.maro.client.common.util.PojoUtil;
import com.maro.client.module.serverorder.pojo.dto.FoodOrderParamsDTO;
import com.maro.client.module.serverorder.pojo.dto.PayParamsDTO;
import com.maro.client.module.serverorder.pojo.dto.SeatchangeParamsDTO;
import com.maro.client.module.serverorder.pojo.entity.MaroClientFoodorderDO;
import com.maro.client.module.serverorder.pojo.entity.MaroClientServerorderDO;
import com.maro.client.module.serverorder.pojo.vo.MaroClientPayedDetailVO;
import com.maro.common.shop.pojo.entity.MaroShopSeatEntity;
import com.maro.common.util.PrintUtil;
import com.maro.manager.print.entity.*;
import com.maro.platform.core.util.DateUtils;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

public class PrintMain {
	
	private static String ip = "10.135.16.234";
	private static int port = 9100;
	
	public static void main(String[] args) throws IOException {
		FlyoutMenu s = new FlyoutMenu();
		s.setSeatName("1号桌");
		s.setBillMark("01235489");
		s.setRemark("少放盐");
		
		//商品集合
		List<SettleAccountsDishes> dishesList = new ArrayList<SettleAccountsDishes>();
		SettleAccountsDishes a = new SettleAccountsDishes();
		a.setDishesName("麻辣11");
		a.setShuLiang("2");
		a.setUnit("份");
		a.setRemark("少辣");
		dishesList.add(a);
		
		SettleAccountsDishes a1 = new SettleAccountsDishes();
		a1.setDishesName("麻辣222");
		a1.setShuLiang("4");
		a1.setUnit("个");
		dishesList.add(a1);
		
		s.setDishesList(dishesList);
		
		PrintMain.printFlyoutMenu(s);
		
	}
	
	/**
	 * 结账单*
	 * 预结单*
	 */
	public static boolean printSettleAccounts(SettleAccounts s){
		
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>["+s.getTitleName()+"]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue>";
		xmlStr += "<key>桌　名:</key>";
		xmlStr += "<value>["+s.getSeatName()+"]</value>";
		xmlStr += "</keyvalue>";
		xmlStr += "<keyvalue>";
		xmlStr += "<key>人　数:</key>";
		xmlStr += "<value>["+s.getRenShu()+"]</value>";
		xmlStr += "</keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key>";
		xmlStr += "<value>["+s.getBillNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>开台时间:</key>";
		xmlStr += "<value>["+s.getBeginTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>结账时间:</key>";
		xmlStr += "<value>["+s.getSettleTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>服务员:</key>";
		xmlStr += "<value>["+s.getWaiter()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>收银员:</key>";
		xmlStr += "<value>["+s.getCashier()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>会　员:</key>";
		xmlStr += "<value>["+s.getMember()+"]</value></keyvalue>";
		xmlStr += "<table>";
		xmlStr += "<cws><cw>20</cw><cw>8</cw><cw>6</cw><cw>8</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>单价</header><header>数量</header><header>总额</header></headers>";
		xmlStr += "<rows>";
		
		/*for(int j=0;j<s.getDishesList().size();j++){
			xmlStr += "<row><td>["+s.getDishesList().get(j).getClassName()+"]</td> <td></td> <td></td> <td></td></row>";
			for(int i=0;i<s.getDishesList().get(j).getSpsList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(j).getSpsList().get(i);
				xmlStr += "<row><td>　"+sd.getDishesName()+"</td>";
				xmlStr += "<td>"+sd.getDishesPrice()+"</td>";
				xmlStr += "<td>"+sd.getShuLiang()+"</td>";
				xmlStr += "<td>"+sd.getTotalMoney()+"</td></row>";
			}
		}*/
		
		Double amountDeceivable = 0.0;
		for(int i=0;i<s.getDishesList().size();i++){
			SettleAccountsDishes sd = s.getDishesList().get(i);
			xmlStr += "<row><td>　"+sd.getDishesName()+"</td>";
			xmlStr += "<td>"+sd.getDishesPrice()+"</td>";
			xmlStr += "<td>"+sd.getShuLiang()+"</td>";
			xmlStr += "<td>"+sd.getTotalMoney()+"</td></row>";
			amountDeceivable = amountDeceivable + Double.valueOf(sd.getTotalMoney());
		}
		
		xmlStr += "</rows></table>";
		
		if(s.getTitleName().equals("结账单")){
			for(int i=0;i<s.getObjects().size();i++){
				MaroClientPayedDetailVO mpd = s.getObjects().get(i);
				xmlStr += "<keyvalue><key>"+mpd.getPayTypeString()+":</key><value>["+mpd.getAmount()+"]</value></keyvalue>";
			}
			//xmlStr += "<keyvalue><key>现金支付:</key><value>[100]</value></keyvalue>";
			xmlStr += "<keyvalue><key>抹　零:</key><value>["+s.getSmallChange()+"]</value></keyvalue>";
		}
		xmlStr += "<keyvalue><key>服务费:</key><value>["+s.getServiceCharge()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>应收合计:</key><value>["+amountDeceivable.toString()+"]</value></keyvalue>";

		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}


	/**
	 * 交接班*
	 */
	public static boolean printShiftingOfDuty(ShiftingOfDuty s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[交接班]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		//xmlStr += "<keyvalue><key>交接班单号:</key><value>["+s.getShiftingOfDutyMark()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>班　次:</key><value>["+s.getClassNext()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>开始时间:</key><value>["+s.getStartTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>结束时间:</key><value>["+s.getEndTime()+"]</value></keyvalue>";
        for(Map map:s.getRootInfo()){//基础消费信息
            xmlStr += "<keyvalue><key>"+map.get("name")+"：\t"+"</key><value>["+map.get("value")+"]</value></keyvalue>";
        }
        for(Map map:s.getAreaInfo()){//区域消费
            xmlStr += "<keyvalue><key>"+map.get("typename")+"：\t"+"</key><value>["+map.get("amount")+"]</value></keyvalue>";
        }
        //分隔符
        xmlStr += "<table>";
        xmlStr += "<cws><cw>20</cw><cw>6</cw><cw>14</cw></cws>";
        xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>";
        for(Map map:s.getShouKuangInfo()){//各种支付方式
            xmlStr += "<keyvalue><key>"+map.get("payname")+"：\t"+"</key><value>["+map.get("num")+"]</value></keyvalue>";
        }
        //分隔符
        xmlStr += "<table>";
        xmlStr += "<cws><cw>20</cw><cw>6</cw><cw>14</cw></cws>";
        xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>";
        String foodType="";//菜品种类
        double totalPrice=0.0;//总价
        StringBuffer str=new StringBuffer();
        StringBuffer tmp=new StringBuffer();
        for(Map map:s.getMenuInfo()){//菜品消费信息
            String food_type = map.get("food_type").toString();
            String food_name = map.get("food_name").toString();
            String num = map.get("num").toString();
            String total_price = map.get("total_price").toString();
            if(!foodType.equals(food_type)){
                if(tmp.length()>0){//buffer中有数据时
                    str.append("<keyvalue><key>"+foodType+"：\t"+"</key><value>["+totalPrice+"]</value></keyvalue>");
                    //str.append(foodType+"\t").append(totalPrice).append("\r\n");
                    str.append(tmp.toString());
                    //str.append(tmp.toString());
                    //分隔符
                    str.append("<table>");
                    str.append("<cws><cw>20</cw><cw>6</cw><cw>14</cw></cws>");
                    str.append("<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>");
                    //str.append("---------------------------").append("\r\n");//分割线
                }
                foodType=food_type;
                totalPrice=Double.valueOf(total_price);
                tmp.setLength(0);//清空buffer
                tmp.append("<keyvalue><key>"+food_name+"：\t"+num+"\t"+"</key><value>["+total_price+"]</value></keyvalue>");
                //tmp.append(food_name+"\t").append(num+"\t").append(total_price).append("\r\n");
            }else{
                totalPrice+=Double.valueOf(total_price);
                tmp.append("<keyvalue><key>"+food_name+"：\t"+num+"\t"+"</key><value>["+total_price+"]</value></keyvalue>");
                //tmp.append(food_name+"\t").append(num+"\t").append(total_price).append("\r\n");
            }
        }
        xmlStr +=str.toString();

        /*
		xmlStr += "<keyvalue><key>消费台数:</key><value>["+s.getConsumeSeatNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>消费人数:</key><value>["+s.getConsumePersonNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人均消费:</key><value>["+s.getCapitaConsume()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>单均消费:</key><value>["+s.getSingleConsume()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>未结台数:</key><value>["+s.getOpenSeat()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>应收金额:</key><value>["+s.getRevenueMoney()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>食　堂:</key><value>["+s.getDiningHall()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>外　卖:</key><value>["+s.getTakeOut()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>上班余额:</key><value>["+s.getBeOnDutyBalance()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>备用金额:</key><value>["+s.getStandbyBalance()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>收到押金:</key><value>["+s.getReceiveCashPledge()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>结账押金:</key><value>["+s.getSettleCashPledge()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>服务费:</key><value>["+s.getServiceCharge()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>20</cw><cw>6</cw><cw>14</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>收款项目</header><header>笔数</header><header>金额</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getGpList().size();i++){
				ShiftingOfDutyGatheringProject sd = s.getGpList().get(i);
				xmlStr += "<row><td>　"+sd.getProjectName()+"</td>";
				xmlStr += "<td>"+sd.getStrokeCount()+"</td>";
				xmlStr += "<td>"+sd.getMoney()+"</td></row>";
			}
		
		xmlStr += "</rows></table>";
		xmlStr += "<keyvalue><key>赠送金额:</key><value>["+s.getPresentedBalance()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>免单金额:</key><value>["+s.getNoSingleBalance()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>折扣金额:</key><value>["+s.getDiscountBalance()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>抹零金额:</key><value>["+s.getMoLing()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>礼卷金额:</key><value>["+s.getLiJuan()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>红　包:</key><value>["+s.getRedRnvelope()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		*/
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 外卖单
	 */
	public static boolean printTakeOutSingle(TakeOutSingle s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[外卖单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>订餐时间:</key><value>["+s.getOrderTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>接单时间:</key><value>["+s.getOrderTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>平台订单号:</key><value>["+s.getOrderNumber()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>备　注:</key><value>["+s.getRemark()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>活　动:</key><value>["+s.getActivity()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>发　票:</key><value>["+s.getInvoice()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>税　号:</key><value>["+s.getDutyParagraph()+"]</value></keyvalue>";
		xmlStr += "<table>";
		xmlStr += "<cws><cw>20</cw><cw>12</cw><cw>10</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>单价</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				xmlStr += "<row><td>　"+sd.getDishesName()+"</td>";
				xmlStr +="<td>"+sd.getDishesPrice()+"</td>";
				xmlStr += "<td>　"+sd.getShuLiang()+" "+sd.getUnit()+"</td></row>";
			}
		
		xmlStr += "</rows></table>";
		xmlStr += "<keyvalue><key>配送费:</key><value>["+s.getDeliveryCost()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>餐盒费:</key><value>["+s.getMealsFee()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>减满优惠:</key><value>["+s.getPreferentialReduction()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>新用户优惠:</key><value>["+s.getNewUserUiscounts()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>已在线支付:</key><value>["+s.getOnLinePayment()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>地址:</key><value>["+s.getAddress()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>电话:</key><value>["+s.getPhone()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>名称:</key><value>["+s.getUserName()+"]</value></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>"; 
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 点菜分单*
	 */
	public static boolean printOrderSubmenu(OrderSubmenu s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[点菜分单 ]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>人　数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>服务员:</key><value>["+s.getWaiter()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>下单时间:</key><value>["+s.getOrderTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>26</cw><cw>14</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				xmlStr += "<row><td>　"+sd.getDishesName()+"</td>";
				xmlStr += "<td>　"+sd.getShuLiang()+" "+sd.getUnit()+"</td></row>";
			}
		
		xmlStr += "</rows></table>";
		xmlStr += "<keyvalue><key>备　注:</key><value>["+s.getRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>整单备注:</key><value>["+s.getWholeRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>送达时间:</key><value>["+s.getDeliveryTime()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 单品崔菜单*
	 */
	public static boolean printSingleUrge(SingleUrge s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[崔菜单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌　名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人　数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>服务员:</key><value>["+s.getWaiter()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>催菜时间:</key><value>["+s.getUrgeDishesTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>26</cw><cw>14</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				xmlStr += "<row><td>　"+sd.getDishesName()+"</td><td>"+sd.getShuLiang()+" "+sd.getUnit()+"</td></row>";
				xmlStr += "<row><td>备　注:"+sd.getRemark()+"</td><td></td></row>";
			}
		
		xmlStr += "</rows></table>";
		//xmlStr += "<keyvalue><key>备　注:</key><value>["+s.getRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>整单备注:</key><value>["+s.getWholeRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 单品退菜单*
	 */
	public static boolean printSingleReturnDishes(SingleReturnDishes s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[退菜单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌　名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人　数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>服务员:</key><value>["+s.getWaiter()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>退菜时间:</key><value>["+s.getQuitDishesTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>26</cw><cw>14</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				xmlStr += "<row><td>　"+sd.getDishesName()+"</td><td>"+sd.getShuLiang()+" "+sd.getUnit()+"</td></row>";
				//xmlStr += "<row><td>备　注:"+sd.getRemark()+"</td><td></td></row>";
			}
		
		xmlStr += "</rows></table>";
		//xmlStr += "<keyvalue><key>备　注:</key><value>["+s.getRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>退菜原因:</key><value>["+s.getCause()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 换台单#
	 */
	public static boolean printChangeChannel(ChangeChannel s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[换台单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌　名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人　数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>换台时间:</key><value>["+s.getChangeChannelTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>原　台:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>目标台:</key><value>["+s.getTargetSeatName()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 并台单#
	 */
	public static boolean printCombineTable(CombineTable s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[并台单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌　名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人　数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>并台时间:</key><value>["+s.getChangeChannelTime()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<keyvalue><key>原　台:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>目标台:</key><value>["+s.getTargetSeatName()+"]</value></keyvalue>";
		xmlStr += "<line></line>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	/**
	 * 叫起整单#
	 */
	public static boolean printCallUpShole(CallUpShole s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[叫起整单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>人数:</key><value>["+s.getNumber()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>叫起时间:</key><value>["+s.getCallUpTime()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>20</cw><cw>12</cw><cw>10</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>单价</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				//普通的菜
				xmlStr += "<row><td>["+sd.getDishesName()+"]</td>";
				xmlStr += "<td>["+sd.getDishesPrice()+"]</td>";
				xmlStr += "<td>["+sd.getShuLiang()+"] ["+sd.getUnit()+"]</td></row>";
				if(sd.getDishesType().equals("package")){ //套餐
					for(int j=0;j<sd.getSpsList().size();j++){
						SettleAccountsDishes sd_p = sd.getSpsList().get(j);
						xmlStr += "<row><td>　.["+sd_p.getDishesName()+"]</td>";
						xmlStr += "<td></td>";
						xmlStr += "<td>["+sd_p.getShuLiang()+"] ["+sd_p.getUnit()+"]</td></row>";
					}
				}
				xmlStr += "<row><td>备注："+sd.getRemark()+"</td><td></td><td></td></row>";
			}
		
		xmlStr += "</rows></table>";
		xmlStr += "<keyvalue><key>整单备注:</key><value>["+s.getWholeRemark()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<keyvalue><key>送达时间:</key><value>["+s.getDeliveryTime()+"]</value><font><fontSize>Small</fontSize><bold>true</bold><underline>false</underline></font></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}

	/**
	 * 出菜单
	 * @param 
	 * @return
	 */
	public static boolean printFlyoutMenu(FlyoutMenu s){
		String xmlStr="";
		xmlStr += "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>";
		xmlStr += "<doucument>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>[出菜单]</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Normal</fontSize>";
		xmlStr += "<bold>true</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<blankRow><lineNumber>1</lineNumber></blankRow>";
		xmlStr += "<keyvalue><key>桌　名:</key><value>["+s.getSeatName()+"]</value></keyvalue>";
		xmlStr += "<keyvalue><key>账单号:</key><value>["+s.getBillMark()+"]</value></keyvalue>";
		
		xmlStr += "<table>";
		xmlStr += "<cws><cw>26</cw><cw>14</cw></cws>";
		xmlStr += "<ars><ar>false</ar><ar>true</ar></ars>";
		xmlStr += "<headers><header>品名</header><header>数量</header></headers>";
		xmlStr += "<rows>";
		
			for(int i=0;i<s.getDishesList().size();i++){
				SettleAccountsDishes sd = s.getDishesList().get(i);
				xmlStr += "<row><td>"+sd.getDishesName()+"</td><td>"+sd.getShuLiang()+" "+sd.getUnit()+"</td></row>";
				if(sd.getRemark()!=null){
					xmlStr += "<row><td>　备　注:"+ifStrNull(sd.getRemark()) +"</td><td></td></row>";
				}
			}
		
		xmlStr += "</rows></table>";
		xmlStr += "<keyvalue><key>整单备注:</key><value>["+ifStrNull(s.getRemark())+"]</value></keyvalue>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>光华北三路164号</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "<section><texts>";
		xmlStr += "<text>17726461730</text>";
		xmlStr += "<font>";
		xmlStr += "<fontSize>Small</fontSize>";
		xmlStr += "<bold>false</bold>";
		xmlStr += "<underline>false</underline>";
		xmlStr += "</font></texts>";
		xmlStr += "<textAlign>Center</textAlign>";
		xmlStr += "</section>";
		xmlStr += "</doucument>";
		
		boolean isPrint = PrintUtil.print(xmlStr,ip,port);
		return isPrint;
	}
	
	public static  SingleUrge convertSingleUrge(FoodOrderParamsDTO foodOrderParamsDTO){
		String remark = foodOrderParamsDTO.getMaroClientServerorderDO().getRemark();
		String seatName = foodOrderParamsDTO.getMaroClientServerorderDO().getSeatName();
		String waiterName = foodOrderParamsDTO.getMaroClientServerorderDO().getWaiterName();
		List<MaroClientFoodorderDO> maroClientFoodorderDOList = foodOrderParamsDTO.getMaroClientFoodorderDOList();
		Integer personNumber = foodOrderParamsDTO.getMaroClientServerorderDO().getPersonNumber();
		String code = foodOrderParamsDTO.getMaroClientServerorderDO().getCode();
//		JSONArray jsonArray = new JSONArray();
//		for(int i=0;i<maroClientFoodorderDOList.size();i++){
//			jsonArray.add(foodOrderParamsDTO.getMaroClientFoodorderDOList().get(i));
//		}
		
		List<MaroClientFoodorderDO> list_tmp = foodOrderParamsDTO.getMaroClientFoodorderDOList();
		List<SettleAccountsDishes> list = convertBatchSettleAccountsDishes(list_tmp);
		
		SingleUrge s = new SingleUrge();
		s.setBillMark(code);
		s.setDishesList(list);
		s.setNumber(personNumber+"");
		s.setSeatName(seatName);
		s.setRemark(remark);
		s.setUrgeDishesTime(DateUtils.formatTime());
		s.setWaiter(waiterName);
		s.setWholeRemark(remark);
		return s;
	}
	public static SingleReturnDishes  convertSingleReturnDishes(FoodOrderParamsDTO foodOrderParamsDTO){
		String remark = foodOrderParamsDTO.getMaroClientServerorderDO().getRemark();
		String seatName = foodOrderParamsDTO.getMaroClientServerorderDO().getSeatName();
		String waiterName = foodOrderParamsDTO.getMaroClientServerorderDO().getWaiterName();
		List<MaroClientFoodorderDO> maroClientFoodorderDOList = foodOrderParamsDTO.getMaroClientFoodorderDOList();
		Integer personNumber = foodOrderParamsDTO.getMaroClientServerorderDO().getPersonNumber();
		String code = foodOrderParamsDTO.getMaroClientServerorderDO().getCode();

		
		List<MaroClientFoodorderDO> list_tmp = foodOrderParamsDTO.getMaroClientFoodorderDOList();
		List<SettleAccountsDishes> list = convertBatchSettleAccountsDishes(list_tmp);
		SingleReturnDishes s = new SingleReturnDishes();
		s.setBillMark(code);
		s.setDishesList(list);
		s.setNumber(personNumber+"");
		s.setSeatName(seatName);
//		s.setRemark(remark);
		s.setQuitDishesTime(DateUtils.formatTime());
		s.setWaiter(waiterName);
		s.setCause(list.get(0).getRemark());
		return s;
	}

	public static CombineTable convertCombineTable(List<SeatchangeParamsDTO> seatchangeParamsDTOList){
		SeatchangeParamsDTO leadMergeSeatchangeParamsDTO = seatchangeParamsDTOList.get(0);
		MaroClientServerorderDO maroClientServerorderDO = leadMergeSeatchangeParamsDTO.getMaroClientServerorderDO();
		String seatName = maroClientServerorderDO.getSeatName();
		Integer personNumber = maroClientServerorderDO.getPersonNumber();
		String code = maroClientServerorderDO.getCode();
		StringBuffer buf = new StringBuffer();
		String targetSeatNames = "";
		String srcSeatNames = leadMergeSeatchangeParamsDTO.getMergeMaroShopSeatEntity().getName();
		for(int i=1;i<seatchangeParamsDTOList.size();i++){
			SeatchangeParamsDTO seatchangeParamsDTO = seatchangeParamsDTOList.get(i);
			MaroShopSeatEntity mergeMaroShopSeatEntity = seatchangeParamsDTO.getMergeMaroShopSeatEntity();
			buf.append(","+mergeMaroShopSeatEntity.getName());
		}
		if(buf.length() > 0){
			targetSeatNames = buf.substring(1);
		}

		CombineTable s = new CombineTable();
		s.setBillMark(code);
		s.setNumber(personNumber+"");
		s.setSeatName(seatName);
		s.setTargetSeatName(targetSeatNames);
		s.setChangeChannelTime(DateUtils.formatTime());
		s.setRawsSeatName(srcSeatNames);
		return s;
	}

	public static ChangeChannel convertChangeChannel(SeatchangeParamsDTO seatchangeParamsDTO) {
		MaroClientServerorderDO maroClientServerorderDO = seatchangeParamsDTO.getMaroClientServerorderDO();
		String srcSeatName = seatchangeParamsDTO.getSrcMaroShopSeatEntity().getName();
		String destSeatName = seatchangeParamsDTO.getDestMaroShopSeatEntity().getName();
		String seatName = maroClientServerorderDO.getSeatName();
		Integer personNumber = maroClientServerorderDO.getPersonNumber();
		String code = maroClientServerorderDO.getCode();
		ChangeChannel s =new ChangeChannel();
		s.setBillMark(code);
		s.setChangeChannelTime(DateUtils.formatTime());
		s.setNumber(personNumber+"");
		s.setRawsSeatName(destSeatName);
		s.setTargetSeatName(destSeatName);
		s.setSeatName(seatName);
		return s;
	}

	public static SettleAccounts convertSettleAccounts(PayParamsDTO payParamsDTO, boolean isPre) {
		String shop = payParamsDTO.getMaroClientServerorderDO().getRestaurantName();
		String cashier = payParamsDTO.getMaroClientServerorderDO().getCashierName();
		Integer guests = payParamsDTO.getMaroClientServerorderDO().getPersonNumber() == null ? 0 : payParamsDTO.getMaroClientServerorderDO().getPersonNumber();
		String  orderNum = payParamsDTO.getMaroClientServerorderDO().getCode();
		BigDecimal serviceCharge = payParamsDTO.getMaroClientServerorderDO().getServiceCharge();
		Long beginTime = payParamsDTO.getMaroClientServerorderDO().getBeginTime();
		String table = payParamsDTO.getMaroClientServerorderDO().getSeatNameList();
		if(table != null){
			table = table.substring(1);
		}
		String waiter = payParamsDTO.getMaroClientServerorderDO().getWaiterName();
		BigDecimal odd = payParamsDTO.getMaroClientServerorderDO().getSmallChange();
		Integer deposit = payParamsDTO.getMaroClientServerorderDO().getPayedDeposit();
		String discount = payParamsDTO.getMaroClientServerorderDO().getDiscount().doubleValue() == 1 ? "" : payParamsDTO.getMaroClientServerorderDO().getDiscount()+"";
		BigDecimal total = payParamsDTO.getMaroClientServerorderDO().getCollectedAmount();
		BigDecimal amount = payParamsDTO.getMaroClientServerorderDO().getAmount();
		String address = payParamsDTO.getMaroShopEntity().getPosition();
		String telphone = payParamsDTO.getMaroShopEntity().getPhone();
		
		String smallChange = payParamsDTO.getMaroClientServerorderDO().getSmallChange() == null ? "0":payParamsDTO.getMaroClientServerorderDO().getSmallChange()+"";
//		JSONArray list = new JSONArray();
//		for(int i=0;i<payParamsDTO.getMaroClientFoodorderDOList().size();i++){
//			JSONObject json = new JSONObject();
//			json.put("name",payParamsDTO.getMaroClientFoodorderDOList().get(i).getFoodName() + payParamsDTO.getMaroClientFoodorderDOList().get(i).getSpecificationsName());
//			json.put("number",payParamsDTO.getMaroClientFoodorderDOList().get(i).getQuantity());
//			json.put("price",payParamsDTO.getMaroClientFoodorderDOList().get(i).getTotalPrice());
//			list.add(json);
//		}
		
		List<MaroClientFoodorderDO> list_tmp = payParamsDTO.getMaroClientFoodorderDOList();
		List<SettleAccountsDishes> list = convertBatchSettleAccountsDishes(list_tmp);
	
		
		String dateTime = "";
		SettleAccounts s = new SettleAccounts();
		if(!isPre){
			Long l = payParamsDTO.getMaroClientPayedDO().getPayTime();
			dateTime = DateUtils.formatDate(new Date(l),DateUtils.datetimeFormat.toPattern());
			s.setTitleName("结账单");
			List<MaroClientPayedDetailVO> objects = PojoUtil.convertBatchDO2VO(payParamsDTO.getMaroClientPayedDetailDOList(),MaroClientPayedDetailVO.class);
			s.setObjects(objects);
		}else{
			s.setTitleName("预结单");
		}
		s.setBeginTime(DateUtils.formatTime(beginTime));
		s.setBillNumber(orderNum);
		s.setCashier(cashier);
		s.setDishesList(list);
		s.setAmountDeceivable(total+"");
//		s.setMember();
//		s.setMemberTotal();
		s.setRenShu(guests);
		s.setSeatName(table);
		s.setServiceCharge(serviceCharge+"");
		s.setWaiter(waiter);
		s.setZongJie(amount+"");
		s.setSettleTime(dateTime);
		s.setSmallChange(smallChange);
		
		
		return s;
	}
	
	public static SettleAccountsDishes convertSettleAccountsDishes(MaroClientFoodorderDO maroClientFoodorderDO){
		SettleAccountsDishes s = new SettleAccountsDishes();
//		s.setClassName(maroClientFoodorderDO.getType());
		s.setDishesName(maroClientFoodorderDO.getFoodName());
		s.setDishesPrice(maroClientFoodorderDO.getPrice()+"");
		s.setDishesType(EnumUtil.getName(FoodTypeEnum.class, maroClientFoodorderDO.getPackageType()));
		s.setRemark(maroClientFoodorderDO.getRemark());
		s.setShuLiang(maroClientFoodorderDO.getQuantity()+"");
//		s.setSpsList(spsList);
		s.setTotalMoney(maroClientFoodorderDO.getTotalPrice()+"");
		s.setUnit(maroClientFoodorderDO.getUnitName());
//		s.setVipPrice(vipPrice);
		return s;
	}
	public static List<SettleAccountsDishes> convertBatchSettleAccountsDishes(List<MaroClientFoodorderDO> maroClientFoodorderDOs){
		List<SettleAccountsDishes> list = new ArrayList<SettleAccountsDishes>();
		if(maroClientFoodorderDOs != null && maroClientFoodorderDOs.size() > 0){
			for( int i=0;i<maroClientFoodorderDOs.size();i++){
				MaroClientFoodorderDO row = maroClientFoodorderDOs.get(i);
				SettleAccountsDishes row_tmp = convertSettleAccountsDishes(row);
				list.add(row_tmp);
			}
		}
		return list;
	}

	public static OrderSubmenu convertOrderSubmenu(FoodOrderParamsDTO foodOrderParamsDTO) {
		OrderSubmenu orderSubmenu = new OrderSubmenu();
		String remark = foodOrderParamsDTO.getMaroClientServerorderDO().getRemark();
		String seatName = foodOrderParamsDTO.getMaroClientServerorderDO().getSeatName();
		String waiterName = foodOrderParamsDTO.getMaroClientServerorderDO().getWaiterName();
		Integer personNumber = foodOrderParamsDTO.getMaroClientServerorderDO().getPersonNumber();
		String code = foodOrderParamsDTO.getMaroClientServerorderDO().getCode();


		List<MaroClientFoodorderDO> list_tmp = foodOrderParamsDTO.getMaroClientFoodorderDOList();
		List<SettleAccountsDishes> list = convertBatchSettleAccountsDishes(list_tmp);
		SingleReturnDishes s = new SingleReturnDishes();
		orderSubmenu.setBillMark(code);
		orderSubmenu.setDishesList(list);
		orderSubmenu.setNumber(personNumber+"");
//		orderSubmenu.setDeliveryTime();
		orderSubmenu.setOrderTime(DateUtils.formatTime());
		orderSubmenu.setWaiter(waiterName);
		orderSubmenu.setWholeRemark(remark);
		orderSubmenu.setRemark(remark);
		return orderSubmenu;
	}
	
	private static String ifStrNull(String str){
		return str != null ? str : ""; 
	}

	public static FlyoutMenu convertFlyoutMenu(MaroClientServerorderDO serverorderDO, MaroClientFoodorderDO foodorderDO) {
		FlyoutMenu flyoutMenu = new FlyoutMenu();
		String remark = serverorderDO.getRemark();
		String seatName = serverorderDO.getSeatName();
		String code = serverorderDO.getCode();
		SettleAccountsDishes settleAccountsDishes = convertSettleAccountsDishes(foodorderDO);
		List<SettleAccountsDishes> list = new ArrayList<SettleAccountsDishes>();
		list.add(settleAccountsDishes);
		flyoutMenu.setBillMark(code);
		flyoutMenu.setDishesList(list);
		flyoutMenu.setRemark(remark);
		flyoutMenu.setSeatName(seatName);
		return flyoutMenu;
	}
}
