package com.maro.client.module.user.controller.impl;

import com.maro.client.common.constant.StringConstant;
import com.maro.client.module.user.controller.UserController;
import com.maro.client.module.user.service.UserService;
import com.maro.common.shop.pojo.entity.MaroShopEntity;
import com.maro.common.users.tsuser.pojo.vo.UserInfoVO;
import com.maro.common.users.tsuser.server.MaroCommonUserService;
import com.maro.manager.report.service.ReportServiceI;
import com.maro.platform.core.common.model.json.AjaxJson;
import com.maro.platform.core.util.ResourceUtil;
import com.maro.platform.web.system.pojo.base.TSUser;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 用户模块的控制器实现类
 * @author 冯成果
 * @date 2018-4-11
 * @since 版本号 01.00.0001
*/
@Controller
@RequestMapping("/clientUserController")
public class UserControllerImpl implements UserController {

    @Resource(name="clientUserServiceImpl")
    private UserService userService;
    @Resource
    private MaroCommonUserService maroCommonUserService;
    @Autowired
    private ReportServiceI reportService;
    @Override
    @RequestMapping(params = "login")
    @ResponseBody
    public AjaxJson login(HttpServletRequest req,String user, String pass,String shiftCode) {
        //在session中设置值班code信息
        if(shiftCode!=null&&!shiftCode.equals("")){
            req.getSession().setAttribute("shiftCode",shiftCode);
        }
        return userService.login(req,user,pass);
    }
    
   /* @RequestMapping(params = "login")
    public String login1(ModelMap modelMap,HttpServletRequest request,HttpServletResponse response) {
    	return "client/login";
    }*/
    
    

    @Override
    @RequestMapping(params = "tsUserList")
    @ResponseBody
    public AjaxJson listUser() {
        UserInfoVO sessionUser = (UserInfoVO) ResourceUtil.getSessionUser();
        String departId = sessionUser.getCurrentDepart().getId();
        List<TSUser> tsUsers = maroCommonUserService.tsUserList(departId);
        AjaxJson ajaxJson = new AjaxJson();
        if(null != tsUsers){
            Map<String,Object> map = new HashMap<>();
            ajaxJson.setMsg(StringConstant.TIP_SUCCESS);
            ajaxJson.setSuccess(true);
            ajaxJson.setObj(tsUsers);
        }else{
            ajaxJson.setMsg(StringConstant.TIP_FAIL);
            ajaxJson.setSuccess(false);
        }
        return ajaxJson;
    }
    
    @RequestMapping(params = "cacheManager")
    @ResponseBody
    public AjaxJson cacheManagerTest() {
    	 AjaxJson ajaxJson = new AjaxJson();
    	 MaroShopEntity shop = userService.getShop();
    	 ajaxJson.setObj(shop);
    	 return ajaxJson;
    }
    @Override
    @RequestMapping(params = "isInit")
    @ResponseBody
    public AjaxJson isInit() {
        AjaxJson ajaxJson = new AjaxJson();
        boolean result=true;
        int num= userService.getShopNum();
        if(num==0){
            result=false;
        }
        ajaxJson.setSuccess(result);
        return ajaxJson;
    }

    @RequestMapping(params = "getShift")
    @ResponseBody
    @Override
    public AjaxJson getShift() {
        AjaxJson j = new AjaxJson();
        try{
            Map map=userService.getShift();
            if(map!=null){
                List list=new ArrayList();
                for(Object o:map.keySet()){
                    Map m=new HashMap();
                    m.put("shift_code",o);
                    m.put("shift_name",map.get(o));
                    list.add(m);
                }
                j.setObj(list);
            }
        }catch(Exception e){
            e.printStackTrace();
            j.setSuccess(false);
            j.setMsg("信息获取失败！");
        }
        return j;
    }

    @RequestMapping(params = "getShiftInfo")
    @ResponseBody
    public AjaxJson getShiftInfo(HttpServletRequest req) {
        AjaxJson j = new AjaxJson();
        try{
            //获取班次code
            String shiftCode= (String) req.getSession().getAttribute("shiftCode");
            if(shiftCode!=null&&!shiftCode.equals("")){
                //获取收银员姓名
                String name=ResourceUtil.getSessionUser().getRealName();
                //获取收银员姓名id
                String userId=ResourceUtil.getSessionUser().getId();
                //获取营业报表
                Map map=reportService.getShiftInfo(shiftCode,name,userId);
                j.setObj(map);
            }else{
                j.setSuccess(false);
                j.setMsg("无班次信息！");
            }
        }catch(Exception e){
            e.printStackTrace();
            j.setSuccess(false);
            j.setMsg("信息获取失败！");
        }
        return j;
    }

    @RequestMapping(params = "confirmShift")
    @ResponseBody
    @Override
    public AjaxJson confirmShift(HttpServletRequest req) {
        AjaxJson j = new AjaxJson();
        try{
            //获取班次code
            String shiftCode= (String) req.getSession().getAttribute("shiftCode");
            if(shiftCode!=null&&!shiftCode.equals("")){
                //获取收银员姓名
                String name=ResourceUtil.getSessionUser().getRealName();
                //获取收银员姓名id
                String userId=ResourceUtil.getSessionUser().getId();
                //打印营业报表
                boolean result=reportService.printBusReport(shiftCode,name,userId);
                if(!result){
                    j.setSuccess(false);
                    j.setMsg("打印信息失败！！");
                }
            }else{
                j.setSuccess(false);
                j.setMsg("无班次信息！");
            }
        }catch(Exception e){
            e.printStackTrace();
            j.setSuccess(false);
            j.setMsg("信息获取失败！");
        }
        return j;
    }

}
